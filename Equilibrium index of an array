The idea is to get total sum of array first. 
Then Iterate through the array and keep updating the left sum which is initialized as zero.
In the loop, we can get right sum by subtracting the elements one by one. 
Thanks to Sambasiva for suggesting this solution and providing code for this.

1) Initialize leftsum  as 0
2) Get the total sum of the array as sum
3) Iterate through the array and for each index i, do following.
    a)  Update sum to get the right sum.  
           sum = sum - arr[i] 
       // sum is now right sum
    b) If leftsum is equal to sum, then return current index. 
    c) leftsum = leftsum + arr[i] // update leftsum for next iteration.
4) return -1 // If we come out of loop without returning then
             // there is no equilibrium index

NOTE: We can two variants of the program - First where the index position is included in the left and right sum AND
the Second where the index position is not included in the left and the right sum
/*
 Sample Input: 1) 4 8 5 1 4 9 5 - Applicable for with index
               2) 4 8 5 1 0 4 9 5 - Applicable for without index
*/

/* Time Complexity: O(n) */


mport java.io.BufferedReader;
import java.io.InputStreamReader;

public class EquilibriumIndex {
public static void main(String[] args) throws Exception {
	BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	System.out.println("How many elements in the array");
	int n = Integer.parseInt(in.readLine());
	System.out.println("Enter the array elements");
	int[] array=new int[n];
	for(int i=0;i<n;i++)
		array[i]=Integer.parseInt(in.readLine());
	
	// Including Index Position
	System.out.println("The equilibrium index including Index Position");
	int equilibriumIndexA = findEquilibriumIndexIncludingIndexElement(array);
	if(equilibriumIndexA==-1)
		System.out.println("The array does not have a equilibrium index position");
	else
	System.out.println("The equilibrium index of the array is :"+(equilibriumIndexA+1));
	
	// Without Index Position
	System.out.println("The equilibrium index without including index position");
	int equilibriumIndexB = findEquilibriumIndexWithoutIncludingIndexElement(array);
	if(equilibriumIndexB==-1)
		System.out.println("The array does not have a equilibrium index position");
	else
	System.out.println("The equilibrium index of the array is :"+(equilibriumIndexB+1));
}

//Including Index Position
public static int findEquilibriumIndexIncludingIndexElement(int[] array) {
	int leftSum=0;
	int rightSum=0;
	int equilibriumIndex=-1;
	for(int i=0;i<array.length;i++)
		rightSum+=array[i];
	
	for(int i=0;i<array.length;i++){
		leftSum+=array[i]; // This statement is placed below to achieve the below method
		rightSum-=array[i];
		if(leftSum==rightSum){
			equilibriumIndex=i;
		    break;
		}
		
	}
	return equilibriumIndex;
}

//Without Index Position
public static int findEquilibriumIndexWithoutIncludingIndexElement(int[] array) {
	int leftSum=0;
	int rightSum=0;
	int equilibriumIndex=-1;
	for(int i=0;i<array.length;i++)
		rightSum+=array[i];
	
	for(int i=0;i<array.length;i++){
		
		rightSum-=array[i];
		if(leftSum==rightSum){
			equilibriumIndex=i;
		    break;
		} 
	    leftSum+=array[i];  // This statement is placed above to achieve the above method
	}
	return equilibriumIndex;
}
}
